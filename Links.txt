Платформы:
https://rocketchat-nn-dec-24.21-school.ru
https://edu.21-school.ru

login@student.21-school.ru


ByeDPI:
https://github.com/hufrea/byedpi/releases/
ciadpi - -i 127.0.0.1 -p 8080 -s1 -q1 -Y -Ar -s5 -o25000+s -At -f-1 -r1+s -As -s1 -o1+s -s-1 -An -b+500


Radio:
https://www.accuradio.com/accuclassical
https://generative.fm
https://mynoise.net

GitHubs
https://github.com/robotrainer/pool_school21/tree/master/pool_school21
https://github.com/David-Dzhivanyan/s21pool
https://teletype.in/@un9bot/R26JtrIiav9#8xKo

AI
https://duckduckgo.com/?q=DuckDuckGo&ia=chat



#include <stdio.h>
#include <math.h>

double calculate_mean(int arr[], int size) {
    int sum = 0;
    for (int i = 0; i < size; i++) {
        sum += arr[i];
    }
    return (double)sum / size;
}

double calculate_standard_deviation(int arr[], int size, double mean) {
    double sum_squared_diff = 0.0;
    for (int i = 0; i < size; i++) {
        sum_squared_diff += (arr[i] - mean) * (arr[i] - mean);
    }
    return sqrt(sum_squared_diff / size);
}

int follows_three_sigma_rule(int value, int arr[], int size) {
    double mean = calculate_mean(arr, size);
    double stddev = calculate_standard_deviation(arr, size, mean);
    
    // Проверяем, находится ли значение в пределах трех стандартных отклонений
    return (value >= mean - 3 * stddev) && (value <= mean + 3 * stddev);
}

int main() {
    int arr[] = {10, 12, 23, 23, 16, 23, 21, 16};
    int size = sizeof(arr) / sizeof(arr[0]);
    int value_to_check = 30; // Значение, которое нужно проверить

    if (follows_three_sigma_rule(value_to_check, arr, size)) {
        printf("Значение %d подчиняется правилу трех сигм.\n", value_to_check);
    } else {
        printf("Значение %d не подчиняется правилу трех сигм.\n", value_to_check);
    }

    return 0;
}

